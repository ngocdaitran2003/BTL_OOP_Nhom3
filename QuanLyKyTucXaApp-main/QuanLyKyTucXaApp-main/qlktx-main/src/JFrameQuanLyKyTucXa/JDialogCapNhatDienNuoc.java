/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package JFrameQuanLyKyTucXa;

import Connector.KetNoiSQL;
import dao.DichVuDAO;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import model.ThongTinDichVu;

/**
 *
 * @author Phan Tien
 */
public class JDialogCapNhatDienNuoc extends javax.swing.JDialog {

    /**
     * Creates new form JDialogCapNhatDienNuoc
     */
    public JDialogCapNhatDienNuoc() {
        super();
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtThangGhi = new javax.swing.JLabel();
        txtMaPhong = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtSoNuocCu = new javax.swing.JTextField();
        txtSoNuocMoi = new javax.swing.JTextField();
        txtSoDienCu = new javax.swing.JTextField();
        txtSoDienMoi = new javax.swing.JTextField();
        buttonThoat = new javax.swing.JButton();
        buttonThoat1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel40.setBackground(new java.awt.Color(19, 90, 118));
        jLabel40.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(255, 255, 255));
        jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel40.setText("QUẢN LÝ KHOẢN PHÍ DỊCH VỤ");
        jLabel40.setOpaque(true);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(19, 90, 118));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CẬP NHẬT CHỈ SỐ ĐIỆN NƯỚC");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(19, 90, 118));
        jLabel2.setText("Tháng ghi  :");

        txtThangGhi.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtThangGhi.setForeground(new java.awt.Color(19, 90, 118));
        txtThangGhi.setText("8/2023");

        txtMaPhong.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtMaPhong.setForeground(new java.awt.Color(19, 90, 118));
        txtMaPhong.setText("8/2023");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(19, 90, 118));
        jLabel3.setText("Mã phòng :");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(19, 90, 118));
        jLabel4.setText("Số nước cũ :");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(19, 90, 118));
        jLabel5.setText("Số nước mới :");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(19, 90, 118));
        jLabel6.setText("Số điện cũ :");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(19, 90, 118));
        jLabel7.setText("Số điện mới :");

        txtSoNuocCu.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtSoNuocCu.setForeground(new java.awt.Color(19, 90, 118));
        txtSoNuocCu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(19, 90, 118)));
        txtSoNuocCu.setEnabled(false);

        txtSoNuocMoi.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtSoNuocMoi.setForeground(new java.awt.Color(19, 90, 118));
        txtSoNuocMoi.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(19, 90, 118)));

        txtSoDienCu.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtSoDienCu.setForeground(new java.awt.Color(19, 90, 118));
        txtSoDienCu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(19, 90, 118)));
        txtSoDienCu.setEnabled(false);

        txtSoDienMoi.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtSoDienMoi.setForeground(new java.awt.Color(19, 90, 118));
        txtSoDienMoi.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(19, 90, 118)));

        buttonThoat.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        buttonThoat.setForeground(new java.awt.Color(19, 90, 118));
        buttonThoat.setText("Thoát");
        buttonThoat.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(19, 90, 118)));
        buttonThoat.setOpaque(true);
        buttonThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonThoatActionPerformed(evt);
            }
        });

        buttonThoat1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        buttonThoat1.setForeground(new java.awt.Color(19, 90, 118));
        buttonThoat1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/save.png"))); // NOI18N
        buttonThoat1.setText("Cập nhật");
        buttonThoat1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(19, 90, 118)));
        buttonThoat1.setOpaque(true);
        buttonThoat1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonThoat1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(buttonThoat1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(buttonThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(120, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSoDienMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSoDienCu, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(4, 4, 4)
                                    .addComponent(txtThangGhi, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(txtMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtSoNuocCu, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtSoNuocMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(4, 4, 4))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtThangGhi, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                    .addComponent(txtMaPhong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSoNuocCu, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSoNuocMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                        .addGap(21, 21, 21))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSoDienCu, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSoDienMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonThoat1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonThoatActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_buttonThoatActionPerformed

    private void buttonThoat1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonThoat1ActionPerformed
        // TODO add your handling code here:
        int choice = JOptionPane.showConfirmDialog(this, "Bạn có muốn cập nhật hay không ?", "Thông báo", JOptionPane.YES_NO_OPTION);
        if (choice == JOptionPane.YES_OPTION) {
            String sonuoccu = txtSoNuocCu.getText().trim();
            String sonuocmoi = txtSoNuocMoi.getText().trim();
            String sodiencu = txtSoDienCu.getText().trim();
            String sodienmoi = txtSoDienMoi.getText().trim();

            String kiemtraso = "^[0-9.+]+$";

            if (!sonuoccu.matches(kiemtraso)) {
                JOptionPane.showMessageDialog(null, "Định dạng số nước sai. Vui lòng nhập lại!");
            } else if (!sonuocmoi.matches(kiemtraso)) {
                JOptionPane.showMessageDialog(null, "Định dạng số nước sai. Vui lòng nhập lại!");
            } else if (!sodiencu.matches(kiemtraso)) {
                JOptionPane.showMessageDialog(null, "Định dạng số điện sai. Vui lòng nhập lại!");
            } else if (!sodienmoi.matches(kiemtraso)) {
                JOptionPane.showMessageDialog(null, "Định dạng số điện sai. Vui lòng nhập lại!");
            } else {

                float sodiencuf = Float.parseFloat(txtSoDienCu.getText().trim());
                float sodienmoif = Float.parseFloat(txtSoDienMoi.getText().trim());
                float sonuoccuf = Float.parseFloat(txtSoNuocCu.getText().trim());
                float sonuocmoif = Float.parseFloat(txtSoNuocMoi.getText().trim());

                if (sonuocmoif < sonuoccuf) {
                    JOptionPane.showMessageDialog(null, "Số nước mới không thể thấp hơn số nước cũ. Vui lòng nhập lại!");
                } else if (sodienmoif < sodiencuf) {
                    JOptionPane.showMessageDialog(null, "Số điện mới không thể thấp hơn số điện cũ. Vui lòng nhập lại!");
                } else {
                    int test = JOptionPane.showConfirmDialog(null, "Bạn chắc có muốn cập nhật số điện nước hay không !", "Thông báo", JOptionPane.YES_NO_OPTION);
                    if (test == JOptionPane.YES_OPTION) {
                        updateChiSoDienNuoc();
                        updateHoaDonPhong();
                        CapNhatDichVuPhong();
                    } else if (test == JOptionPane.NO_OPTION) {
                        JOptionPane.showMessageDialog(null, "Bạn đã hủy cập nhật thành công");
                    }
                }
            }
        }
    }//GEN-LAST:event_buttonThoat1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogCapNhatDienNuoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogCapNhatDienNuoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogCapNhatDienNuoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogCapNhatDienNuoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogCapNhatDienNuoc dialog = new JDialogCapNhatDienNuoc();
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonThoat;
    private javax.swing.JButton buttonThoat1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel txtMaPhong;
    private javax.swing.JTextField txtSoDienCu;
    private javax.swing.JTextField txtSoDienMoi;
    private javax.swing.JTextField txtSoNuocCu;
    private javax.swing.JTextField txtSoNuocMoi;
    private javax.swing.JLabel txtThangGhi;
    // End of variables declaration//GEN-END:variables

    void showChiSoDienNuoc(ThongTinDichVu dv) {
        SimpleDateFormat formatter1 = new SimpleDateFormat("MM/yyyy");
        String ngaythang = formatter1.format(dv.getNgayThang());
        txtThangGhi.setText(ngaythang);
        txtMaPhong.setText(dv.getMaPhong());
        txtSoNuocCu.setText(String.valueOf(dv.getSoNuocCu()));
        txtSoNuocMoi.setText(String.valueOf(dv.getSoNuocMoi()));
        txtSoDienCu.setText(String.valueOf(dv.getSoDienCu()));
        txtSoDienMoi.setText(String.valueOf(dv.getSoDienMoi()));
    }

    void updateChiSoDienNuoc() {
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat formatter1 = new SimpleDateFormat("MM/yyyy");

        Date date = null;
        try {
            date = formatter1.parse(String.valueOf(txtThangGhi.getText().trim()));
        } catch (Exception e) {
        }
        date.setDate(01);
        String ngaythang = formatter.format(date);

        Connection conn = KetNoiSQL.getConnection();
        String sql = "update dichvuphong set soDienMoi = ? ,soNuocMoi = ? where ngayThang=?  and maPhong = ?";
        try {
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setFloat(1, Float.valueOf(txtSoDienMoi.getText()));
            ps.setFloat(2, Float.valueOf(txtSoNuocMoi.getText()));
            ps.setString(3, ngaythang);
            ps.setString(4, txtMaPhong.getText());
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Bạn đã cập nhật chỉ số điện nước thành công !");
            ps.close();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    void updateHoaDonPhong() {
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat formatter1 = new SimpleDateFormat("MM/yyyy");

        Date date = null;
        try {
            date = formatter1.parse(String.valueOf(txtThangGhi.getText().trim()));
        } catch (Exception e) {
        }
        date.setDate(01);
        String ngaythang = formatter.format(date);

        double tiendien = new DichVuDAO().getTienDien();
        double tienmang = new DichVuDAO().getTienMang();
        double tiennuoc = new DichVuDAO().getTienNuoc();

        double nuoctieuthu = Float.valueOf(txtSoNuocMoi.getText()) - Float.valueOf(txtSoNuocCu.getText());
        double dientieuthu = Float.valueOf(txtSoDienMoi.getText()) - Float.valueOf(txtSoDienCu.getText());
        double tongtien = tiendien * dientieuthu + tienmang + tiennuoc * nuoctieuthu;

        Connection conn = KetNoiSQL.getConnection();
        String sql = "update hoadonphong set soDienTieuThu=?,soNuocTieuThu=?,tongTien =? where ngayThang= ? and maPhong = ?";
        try {
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setDouble(1, dientieuthu);
            ps.setDouble(2, nuoctieuthu);
            ps.setDouble(3, tongtien);
            ps.setString(4, ngaythang);
            ps.setString(5, txtMaPhong.getText());
            ps.executeUpdate();
            ps.close();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void CapNhatDichVuPhong() {
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat formatter1 = new SimpleDateFormat("MM/yyyy");

        Date date = null;
        try {
            date = formatter1.parse(String.valueOf(txtThangGhi.getText().trim()));
        } catch (Exception e) {
        }
        date.setDate(01);
        String ngayThang = formatter.format(date);
        String maPhong = String.valueOf(txtMaPhong.getText());

        List<ThongTinDichVu> listdv = new ArrayList<>();
        Connection conn = KetNoiSQL.getConnection();
        String sql = "select * from dichvuphong where ngayThang >= '" + ngayThang + "' and maPhong = '" + maPhong + "' order by ngayThang asc";

        try {
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                ThongTinDichVu dichvu = new ThongTinDichVu();
                dichvu.setNgayThang(rs.getDate("ngayThang"));
                dichvu.setMaPhong(rs.getString("maPhong"));
                dichvu.setSoDienCu(rs.getFloat("soDienCu"));
                dichvu.setSoDienMoi(rs.getFloat("soDienMoi"));
                dichvu.setSoNuocCu(rs.getFloat("soNuocCu"));
                dichvu.setSoNuocMoi(rs.getFloat("soNuocMoi"));
                listdv.add(dichvu);
            }
            ps.close();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

//         Cập nhật dịch vụ phòng
        for (int i = 0; i < listdv.size() - 1; i++) {
            ThongTinDichVu dv1 = listdv.get(i);
            ThongTinDichVu dv2 = listdv.get(i + 1);

            dv2.setSoDienCu(dv1.getSoDienMoi());
            dv2.setSoNuocCu(dv1.getSoNuocMoi());
            if (dv2.getSoDienCu() > dv2.getSoDienMoi()) {
                dv2.setSoDienMoi(dv2.getSoDienCu());
            }
            if (dv2.getSoNuocCu() > dv2.getSoNuocMoi()) {
                dv2.setSoNuocMoi(dv2.getSoNuocCu());
            }

        }
        for (ThongTinDichVu dv : listdv) {
            conn = KetNoiSQL.getConnection();
            sql = "update dichvuphong set soDienMoi = ? ,soNuocMoi = ?,soDienCu = ?,soNuocCu = ? where ngayThang=?  and maPhong = ?";
            try {
                PreparedStatement ps = conn.prepareStatement(sql);
                ps.setFloat(1, dv.getSoDienMoi());
                ps.setFloat(2, dv.getSoNuocMoi());
                ps.setFloat(3, dv.getSoDienCu());
                ps.setFloat(4, dv.getSoNuocCu());
                ps.setString(5, String.valueOf(dv.getNgayThang()));
                ps.setString(6, dv.getMaPhong());
                ps.executeUpdate();
                ps.close();
                conn.close();
            } catch (Exception e) {
                e.printStackTrace();
            }

            double tiendien = new DichVuDAO().getTienDien();
            double tienmang = new DichVuDAO().getTienMang();
            double tiennuoc = new DichVuDAO().getTienNuoc();

            double nuoctieuthu = dv.getSoNuocMoi() - dv.getSoNuocCu();
            double dientieuthu = dv.getSoDienMoi() - dv.getSoDienCu();
            double tongtien = tiendien * dientieuthu + tienmang + tiennuoc * nuoctieuthu;

            conn = KetNoiSQL.getConnection();
            sql = "update hoadonphong set soDienTieuThu=?,soNuocTieuThu=?,tongTien =? where ngayThang= ? and maPhong = ?";
            try {
                PreparedStatement ps = conn.prepareStatement(sql);
                ps.setDouble(1, dientieuthu);
                ps.setDouble(2, nuoctieuthu);
                ps.setDouble(3, tongtien);
                ps.setString(4, String.valueOf(dv.getNgayThang()));
                ps.setString(5, dv.getMaPhong());
                ps.executeUpdate();
                ps.close();
                conn.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }

    }
}
