package JFrameQuanLyKyTucXa;

import Connector.KetNoiSQL;
import dao.DichVuDAO;
import dao.PhongDAO;
import dao.SinhVienDAO;
import dao.ThongTinDichVuDAO;
import java.awt.Color;
import java.awt.Font;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import model.ThongTinDichVu;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import model.ThongTinPhong;
import model.ThongTinSinhVien;
import textfield.SearchOptinEvent;
import textfield.SearchOption;

/**
 *
 * @author PhanTien
 */
public class QuanLyKhoanPhi extends javax.swing.JPanel {

    /**
     * Creates new form QuanLyKhoanPhi
     */
    private DefaultTableModel Model;
    private List<ThongTinDichVu> list;
    private int count;
    private float tiendien, tiennuoc, tienmang;
    private SimpleDateFormat dfmonth = new SimpleDateFormat("MM-yyyy");

    public QuanLyKhoanPhi() {
        initComponents();
        AddSearch();
        Model = (DefaultTableModel) table.getModel();
        showTable();
        table.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 12));
        table.getTableHeader().setOpaque(false);
        table.getTableHeader().setBackground(new Color(19, 90, 118));
        table.getTableHeader().setForeground(new Color(225, 225, 225));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        txtSearch = new textfield.TextFieldSearchOption();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtSoDienMoi = new javax.swing.JTextField();
        txtSoDienCu = new javax.swing.JTextField();
        txtSoNuocCu = new javax.swing.JTextField();
        txtSoNuocMoi = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtNam = new com.toedter.calendar.JYearChooser();
        txtThang = new javax.swing.JComboBox<>();
        txtMaPhong = new javax.swing.JComboBox<>();

        setPreferredSize(new java.awt.Dimension(1068, 560));
        setLayout(new java.awt.CardLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setBackground(new java.awt.Color(19, 90, 112));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(19, 90, 118));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText(" TRANG THÔNG TIN SINH VIÊN Ở KÝ TÚC XÁ CỦA HỌC VIỆN ");

        jLabel40.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(237, 50, 55));
        jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel40.setText("Quản lý khoản phí dịch vụ");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(102, 102, 102)));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(237, 50, 55));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("THÔNG TIN CHỈ SỐ ĐIỆN NƯỚC CỦA CÁC PHÒNG");

        jScrollPane1.setBorder(null);

        table.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Tháng ghi", "Mã phòng", "Số nước cũ", "Số nước mới", "Số điện cũ", "Số điện mới"
            }
        ));
        table.setFocusable(false);
        table.setGridColor(new java.awt.Color(255, 255, 255));
        table.setRowHeight(25);
        table.setSelectionBackground(new java.awt.Color(19, 90, 118));
        table.setSelectionForeground(new java.awt.Color(255, 255, 255));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        txtSearch.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(19, 90, 118)));
        txtSearch.setColorOverlay1(new java.awt.Color(19, 90, 118));
        txtSearch.setColorOverlay2(new java.awt.Color(151, 190, 198));
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/back_main.png"))); // NOI18N
        jButton1.setText("Thoát");
        jButton1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(19, 90, 118)));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pencil-color.png"))); // NOI18N
        jButton2.setText("Cập nhật ");
        jButton2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(19, 90, 118)));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/load.png"))); // NOI18N
        jButton3.setText("Làm mới");
        jButton3.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(19, 90, 118)));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 728, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 762, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 61, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 381, Short.MAX_VALUE)))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(102, 102, 102)));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(237, 50, 55));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Số điện nước của phòng");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(19, 90, 118));
        jLabel7.setText("Mã phòng :");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(19, 90, 118));
        jLabel8.setText("Số nước cũ :");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(19, 90, 118));
        jLabel9.setText("Số nước mới :");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(19, 90, 118));
        jLabel10.setText("Số điện cũ :");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(19, 90, 118));
        jLabel11.setText("Số điện mới :");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(19, 90, 118));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/save.png"))); // NOI18N
        jLabel12.setText("Ghi số điện nước");
        jLabel12.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(19, 90, 118)));
        jLabel12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });

        txtSoDienMoi.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtSoDienMoi.setForeground(new java.awt.Color(19, 90, 118));
        txtSoDienMoi.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(19, 90, 118)));

        txtSoDienCu.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtSoDienCu.setForeground(new java.awt.Color(19, 90, 118));
        txtSoDienCu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(19, 90, 118)));

        txtSoNuocCu.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtSoNuocCu.setForeground(new java.awt.Color(19, 90, 118));
        txtSoNuocCu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(19, 90, 118)));

        txtSoNuocMoi.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtSoNuocMoi.setForeground(new java.awt.Color(19, 90, 118));
        txtSoNuocMoi.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(19, 90, 118)));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(19, 90, 118));
        jLabel14.setText("Tháng ghi :");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(19, 90, 118));
        jLabel15.setText("Năm ghi :");

        txtNam.setBackground(new java.awt.Color(255, 255, 255));
        txtNam.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtNamMouseClicked(evt);
            }
        });

        txtThang.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtThang.setForeground(new java.awt.Color(19, 90, 118));
        txtThang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6", "Tháng 7", "Tháng 8", "Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12" }));
        txtThang.setOpaque(true);
        txtThang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtThangActionPerformed(evt);
            }
        });

        txtMaPhong.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtMaPhong.setForeground(new java.awt.Color(19, 90, 118));
        txtMaPhong.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6", "Tháng 7", "Tháng 8", "Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12" }));
        txtMaPhong.setOpaque(true);
        txtMaPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaPhongActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSoDienCu)
                            .addComponent(txtSoNuocMoi)
                            .addComponent(txtSoNuocCu, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                            .addComponent(txtThang, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtNam, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaPhong, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap(16, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(9, 9, 9)
                                .addComponent(txtSoDienMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtSoNuocCu, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtSoNuocMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtSoDienCu, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtSoDienMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel40, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 19, Short.MAX_VALUE))
        );

        add(jPanel1, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
        count = table.getSelectedRow();
//        LayThongTinDienNuoc();
    }//GEN-LAST:event_tableMouseClicked

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        // TODO add your handling code here:
        if (KiemTraKhoanPhi()) {
            String thongbao = "Hiện tại chỉ số điện nước của mã phòng " + txtMaPhong.getSelectedItem() + " trong tháng này đã đc ghi! Vui lòng cập nhật hoặc xóa để nhập lại";
            JOptionPane.showMessageDialog(this, thongbao);
        } else {

            String sonuoccu = txtSoNuocCu.getText().trim();
            String sonuocmoi = txtSoNuocMoi.getText().trim();
            String sodiencu = txtSoDienCu.getText().trim();
            String sodienmoi = txtSoDienMoi.getText().trim();

            String kiemtraso = "^[0-9.+]+$";

            if (!sonuoccu.matches(kiemtraso)) {
                JOptionPane.showMessageDialog(this, "Định dạng số nước sai. Vui lòng nhập lại!");
            } else if (!sonuocmoi.matches(kiemtraso)) {
                JOptionPane.showMessageDialog(this, "Định dạng số nước sai. Vui lòng nhập lại!");
            } else if (!sodiencu.matches(kiemtraso)) {
                JOptionPane.showMessageDialog(this, "Định dạng số điện sai. Vui lòng nhập lại!");
            } else if (!sodienmoi.matches(kiemtraso)) {
                JOptionPane.showMessageDialog(this, "Định dạng số điện sai. Vui lòng nhập lại!");
            } else {

                float sodiencuf = Float.parseFloat(txtSoDienCu.getText().trim());
                float sodienmoif = Float.parseFloat(txtSoDienMoi.getText().trim());
                float sonuoccuf = Float.parseFloat(txtSoNuocCu.getText().trim());
                float sonuocmoif = Float.parseFloat(txtSoNuocMoi.getText().trim());

                if (sonuocmoif < sonuoccuf) {
                    JOptionPane.showMessageDialog(this, "Số nước mới không thể thấp hơn số nước cũ. Vui lòng nhập lại!");
                } else if (sodienmoif < sodiencuf) {
                    JOptionPane.showMessageDialog(this, "Số điện mới không thể thấp hơn số điện cũ. Vui lòng nhập lại!");
                } else {
                    int test = JOptionPane.showConfirmDialog(null, "Bạn chắc có muốn thêm số điện nước hay không?", "Thông báo", JOptionPane.YES_NO_OPTION);
                    if (test == JOptionPane.YES_OPTION) {
                        AddDichVu();
                        AddHoaDonPhong();
                        CapNhatDichVuPhong();
                        showTable();
                    } else if (test == JOptionPane.NO_OPTION) {
                        JOptionPane.showMessageDialog(this, "Bạn đã hủy cập nhật thành công");
                    }
                }
            }
        }

    }//GEN-LAST:event_jLabel12MouseClicked

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        if (txtSearch.isSelected()) {
            int option = txtSearch.getSelectedIndex();
            String textsearch = txtSearch.getText().trim();
            if (option == 0) {
                showTable("ngayThang", textsearch);
            } else if (option == 1) {
                showTable("maPhong", textsearch);
            }
        }
    }//GEN-LAST:event_txtSearchKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (count == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn phòng để cập nhật chỉ sô điện nước!");
        } else {
            ThongTinDichVu dv = list.get(count);
            System.out.println(count);
            JDialogCapNhatDienNuoc jdialogdiennuoc = new JDialogCapNhatDienNuoc();
            jdialogdiennuoc.setVisible(true);
            jdialogdiennuoc.showChiSoDienNuoc(dv);
            showTable();
            count = -1;
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        showTable();
        txtSoDienCu.setText("");
        txtSoDienMoi.setText("");
        txtSoNuocCu.setText("");
        txtSoNuocMoi.setText("");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtThangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtThangActionPerformed
        // TODO add your handling code here:
        resetForm();
        LayChiSoDienNuocCu();
    }//GEN-LAST:event_txtThangActionPerformed

    private void txtMaPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaPhongActionPerformed
        // TODO add your handling code here:
        resetForm();
        LayChiSoDienNuocCu();
    }//GEN-LAST:event_txtMaPhongActionPerformed

    private void txtNamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNamMouseClicked
        // TODO add your handling code here:
        resetForm();
        LayChiSoDienNuocCu();
    }//GEN-LAST:event_txtNamMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    private javax.swing.JComboBox<String> txtMaPhong;
    private com.toedter.calendar.JYearChooser txtNam;
    private textfield.TextFieldSearchOption txtSearch;
    private javax.swing.JTextField txtSoDienCu;
    private javax.swing.JTextField txtSoDienMoi;
    private javax.swing.JTextField txtSoNuocCu;
    private javax.swing.JTextField txtSoNuocMoi;
    private javax.swing.JComboBox<String> txtThang;
    // End of variables declaration//GEN-END:variables

    void showTable() {
        list = new ThongTinDichVuDAO().getAllThongTinDichVu();
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat formatter1 = new SimpleDateFormat("MM/yyyy");
        Model.setRowCount(0);
        for (ThongTinDichVu hd : list) {
            String ngaythang = formatter1.format(hd.getNgayThang());
            Model.addRow(new Object[]{
                ngaythang, hd.getMaPhong(), hd.getSoNuocCu(), hd.getSoNuocMoi(), hd.getSoDienCu(), hd.getSoDienMoi()
            });
        }
        count = -1;
    }

    private void showTable(String where, String text) {
        list = new ThongTinDichVuDAO().getAllThongTinSearch(where, text);
        SimpleDateFormat formatter1 = new SimpleDateFormat("MM/yyyy");
        Model.setRowCount(0);
        for (ThongTinDichVu hd : list) {
            String ngaythang = formatter1.format(hd.getNgayThang());
            Model.addRow(new Object[]{
                ngaythang, hd.getMaPhong(), hd.getSoNuocCu(), hd.getSoNuocMoi(), hd.getSoDienCu(), hd.getSoDienMoi()
            });
        }
        count = -1;
    }

    private void LayThongTinDienNuoc() {
        ThongTinDichVu hd = list.get(count);
        int thang = hd.getNgayThang().getMonth();
        int nam = hd.getNgayThang().getYear() + 1900;
        txtNam.setYear(nam);
        txtThang.setSelectedIndex(thang);
        txtMaPhong.setSelectedItem(hd.getMaPhong());
        String sonuoccu = String.valueOf(hd.getSoNuocCu());
        txtSoNuocCu.setText(sonuoccu);
        String sonuocmoi = String.valueOf(hd.getSoNuocMoi());
        txtSoNuocMoi.setText(sonuocmoi);
        String sodiencu = String.valueOf(hd.getSoDienCu());
        txtSoDienCu.setText(sodiencu);
        String sodienmoi = String.valueOf(hd.getSoDienMoi());
        txtSoDienMoi.setText(sodienmoi);
    }

    public void AddSearch() {
        txtSearch.addEventOptionSelected(new SearchOptinEvent() {
            @Override
            public void optionSelected(SearchOption option, int index) {
                txtSearch.setHint("Tìm kiếm " + option.getName() + "....");
            }
        });
        txtSearch.addOption(new SearchOption("tháng ghi theo định dạng yyyy-MM", new ImageIcon(getClass().getResource("/img/bank.png"))));
        txtSearch.addOption(new SearchOption("mã phòng", new ImageIcon(getClass().getResource("/img/home.png"))));
    }

    public void AddComboboxPhong() {

        txtMaPhong.removeAllItems();
        List<ThongTinPhong> listphong = new PhongDAO().getAllThongTinPhong();

        for (ThongTinPhong phong : listphong) {
            txtMaPhong.addItem(phong.getMaPhong());
        }
    }

    public void AddDichVu() {
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        String ngay = "1";
        String thang = String.valueOf(txtThang.getSelectedIndex() + 1);
        String nam = String.valueOf(txtNam.getYear());
        String chuoingaythang = nam + "-" + thang + "-" + ngay;
        Date date1 = null;
        try {
            date1 = formatter.parse(chuoingaythang);
        } catch (Exception e) {
            e.printStackTrace();
        }

        String ngaythang = formatter.format(date1);

        Connection conn = KetNoiSQL.getConnection();
        String sql = "insert into dichvuphong(ngayThang,maPhong,soDienCu,soDienMoi,soNuocCu,soNuocMoi) values(?,?,?,?,?,?)";
        try {
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, ngaythang);
            ps.setString(2, String.valueOf(txtMaPhong.getSelectedItem()));
            ps.setFloat(3, Float.valueOf(txtSoDienCu.getText()));
            ps.setFloat(4, Float.valueOf(txtSoDienMoi.getText()));
            ps.setFloat(5, Float.valueOf(txtSoNuocCu.getText()));
            ps.setFloat(6, Float.valueOf(txtSoNuocMoi.getText()));
            ps.executeUpdate();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void AddHoaDonPhong() {
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        String ngay = "1";
        String thang = String.valueOf(txtThang.getSelectedIndex() + 1);
        String nam = String.valueOf(txtNam.getYear());
        String chuoingaythang = nam + "-" + thang + "-" + ngay;
        Date date1 = null;
        try {
            date1 = formatter.parse(chuoingaythang);
        } catch (Exception e) {
            e.printStackTrace();
        }

        String ngaythang = formatter.format(date1);
        double tiendien = new DichVuDAO().getTienDien();
        double tienmang = new DichVuDAO().getTienMang();
        double tiennuoc = new DichVuDAO().getTienNuoc();

        double nuoctieuthu = Float.valueOf(txtSoNuocMoi.getText()) - Float.valueOf(txtSoNuocCu.getText());
        double dientieuthu = Float.valueOf(txtSoDienMoi.getText()) - Float.valueOf(txtSoDienCu.getText());
        double tongtien = tiendien * dientieuthu + tienmang + tiennuoc * nuoctieuthu;

        Connection conn = KetNoiSQL.getConnection();
        String sql = "insert into hoadonphong(ngayThang,maPhong,soNuocTieuThu,soDienTieuThu,tongTien,trangThai) values(?,?,?,?,?,?)";
        try {
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, ngaythang);
            ps.setString(2, String.valueOf(txtMaPhong.getSelectedItem()));
            ps.setDouble(3, nuoctieuthu);
            ps.setDouble(4, dientieuthu);
            ps.setDouble(5, tongtien);
            ps.setByte(6, Byte.valueOf("0"));
            ps.executeUpdate();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public boolean KiemTraKhoanPhi() {
        boolean kiemtra = false;
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        String ngay = "1";
        String thang = String.valueOf(txtThang.getSelectedIndex() + 1);
        String nam = String.valueOf(txtNam.getYear());
        String chuoingaythang = nam + "-" + thang + "-" + ngay;
        Date date1 = null;
        try {
            date1 = formatter.parse(chuoingaythang);
        } catch (Exception e) {
            e.printStackTrace();
        }

        String ngaythang = formatter.format(date1);

        Connection conn = KetNoiSQL.getConnection();
        String sql = "select * from dichvuphong where ngayThang = '" + ngaythang + "' and maPhong = '" + String.valueOf(txtMaPhong.getSelectedItem()) + "'";

        try {
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                kiemtra = true;
            }
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return kiemtra;
    }

    public void LayChiSoDienNuocCu() {
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        String ngay = "1";
        String thang = String.valueOf(txtThang.getSelectedIndex() + 1);
        String nam = String.valueOf(txtNam.getYear());
        String chuoingaythang = nam + "-" + thang + "-" + ngay;
        Date date1 = null;
        try {
            date1 = formatter.parse(chuoingaythang);
        } catch (Exception e) {
            e.printStackTrace();
        }

        String ngaythang = formatter.format(date1);
        String maphong = String.valueOf(txtMaPhong.getSelectedItem());

        Connection conn = KetNoiSQL.getConnection();
        String sql = "select * from dichvuphong where ngayThang < '" + ngaythang + "' and maPhong = '" + String.valueOf(txtMaPhong.getSelectedItem()) + "' order by ngayThang desc limit 1";

        try {
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                txtSoDienCu.setText(String.valueOf(rs.getFloat("soDienMoi")));
                txtSoNuocCu.setText(String.valueOf(rs.getFloat("soNuocMoi")));
            }
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public void CapNhatDichVuPhong() {
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        String ngay = "1";
        String thang = String.valueOf(txtThang.getSelectedIndex() + 1);
        String nam = String.valueOf(txtNam.getYear());
        String chuoingaythang = nam + "-" + thang + "-" + ngay;
        Date date1 = null;
        try {
            date1 = formatter.parse(chuoingaythang);
        } catch (Exception e) {
            e.printStackTrace();
        }
        String ngayThang = formatter.format(date1);
        String maPhong = String.valueOf(txtMaPhong.getSelectedItem());

        List<ThongTinDichVu> listdv = new ArrayList<>();
        Connection conn = KetNoiSQL.getConnection();
        String sql = "select * from dichvuphong where ngayThang >= '" + ngayThang + "' and maPhong = '" + maPhong + "' order by ngayThang asc";

        try {
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                ThongTinDichVu dichvu = new ThongTinDichVu();
                dichvu.setNgayThang(rs.getDate("ngayThang"));
                dichvu.setMaPhong(rs.getString("maPhong"));
                dichvu.setSoDienCu(rs.getFloat("soDienCu"));
                dichvu.setSoDienMoi(rs.getFloat("soDienMoi"));
                dichvu.setSoNuocCu(rs.getFloat("soNuocCu"));
                dichvu.setSoNuocMoi(rs.getFloat("soNuocMoi"));
                listdv.add(dichvu);
            }
            ps.close();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

//         Cập nhật dịch vụ phòng
        for (int i = 0; i < listdv.size() - 1; i++) {
            ThongTinDichVu dv1 = listdv.get(i);
            ThongTinDichVu dv2 = listdv.get(i + 1);

            dv2.setSoDienCu(dv1.getSoDienMoi());
            dv2.setSoNuocCu(dv1.getSoNuocMoi());
            if (dv2.getSoDienCu() > dv2.getSoDienMoi()) {
                dv2.setSoDienMoi(dv2.getSoDienCu());
            }
            if (dv2.getSoNuocCu() > dv2.getSoNuocMoi()) {
                dv2.setSoNuocMoi(dv2.getSoNuocCu());
            }

        }
        for (ThongTinDichVu dv : listdv) {
            conn = KetNoiSQL.getConnection();
            sql = "update dichvuphong set soDienMoi = ? ,soNuocMoi = ?,soDienCu = ?,soNuocCu = ? where ngayThang=?  and maPhong = ?";
            try {
                PreparedStatement ps = conn.prepareStatement(sql);
                ps.setFloat(1, dv.getSoDienMoi());
                ps.setFloat(2, dv.getSoNuocMoi());
                ps.setFloat(3, dv.getSoDienCu());
                ps.setFloat(4, dv.getSoNuocCu());
                ps.setString(5, String.valueOf(dv.getNgayThang()));
                ps.setString(6, dv.getMaPhong());
                ps.executeUpdate();
                ps.close();
                conn.close();
            } catch (Exception e) {
                e.printStackTrace();
            }

            double tiendien = new DichVuDAO().getTienDien();
            double tienmang = new DichVuDAO().getTienMang();
            double tiennuoc = new DichVuDAO().getTienNuoc();

            double nuoctieuthu = dv.getSoNuocMoi() - dv.getSoNuocCu();
            double dientieuthu = dv.getSoDienMoi() - dv.getSoDienCu();
            double tongtien = tiendien * dientieuthu + tienmang + tiennuoc * nuoctieuthu;

            conn = KetNoiSQL.getConnection();
            sql = "update hoadonphong set soDienTieuThu=?,soNuocTieuThu=?,tongTien =? where ngayThang= ? and maPhong = ?";
            try {
                PreparedStatement ps = conn.prepareStatement(sql);
                ps.setDouble(1, dientieuthu);
                ps.setDouble(2, nuoctieuthu);
                ps.setDouble(3, tongtien);
                ps.setString(4, String.valueOf(dv.getNgayThang()));
                ps.setString(5, dv.getMaPhong());
                ps.executeUpdate();
                ps.close();
                conn.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }

    }

    
    
    private void resetForm(){
        txtSoDienCu.setText("0");
        txtSoDienMoi.setText("");
        txtSoNuocCu.setText("0");
        txtSoNuocMoi.setText("");
    }
}
