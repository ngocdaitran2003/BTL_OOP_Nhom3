/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package JFrameQuanLyKyTucXa;

import Connector.KetNoiSQL;
import dao.HopDongKTXDAO;
import dao.PhongDAO;
import dao.SinhVienDAO;
import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ThongTinHopDong;
import model.ThongTinPhong;
import model.ThongTinSinhVien;
import textfield.SearchOptinEvent;
import textfield.SearchOption;

/**
 *
 * @author DELL
 */
public class HopDongKTX extends javax.swing.JPanel {

    private int count;
    private int count1;
    private List<ThongTinHopDong> listhd;
    private DefaultTableModel Model;
    private int countcbblisthd;
    private List<ThongTinSinhVien> listsinhvien;
    private List<ThongTinSinhVien> listsinhvienchuaAdd;
    private String maSVChuaCoHD;
    //  private String maSVupdatehopdong;

    /**
     * Creates new form HopDongKTX
     */
    public HopDongKTX() {
        initComponents();
        Model = (DefaultTableModel) tablehd.getModel();
        showTable();

        AddSearch();
        tablehd.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 12));
        tablehd.getTableHeader().setOpaque(false);
        tablehd.getTableHeader().setBackground(new Color(19, 90, 118));
        tablehd.getTableHeader().setForeground(new Color(225, 225, 225));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        QuanLyHopDong = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        ScrollPaneSV1 = new javax.swing.JScrollPane();
        tablehd = new javax.swing.JTable();
        btupdatehd1 = new javax.swing.JLabel();
        deleteSV1 = new javax.swing.JLabel();
        txtSearch = new textfield.TextFieldSearchOption();
        cbblisthd = new javax.swing.JComboBox<>();
        txtaddHopDong = new javax.swing.JLabel();
        AddHopDong = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtaddTenSV = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        btnAddSV = new javax.swing.JButton();
        txtaddngayHDKT = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        cbbaddmaPhong = new javax.swing.JComboBox<>();
        txtaddngayHDBD = new com.toedter.calendar.JDateChooser();
        cbbMaSV = new javax.swing.JComboBox<>();
        UpdateHopDong = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtUpTenSV = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtUpMaSoSV = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        btnUpdateSV = new javax.swing.JButton();
        txtngayHDKT = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        cbbmaPhong = new javax.swing.JComboBox<>();
        txtngayHDBD = new com.toedter.calendar.JDateChooser();

        setPreferredSize(new java.awt.Dimension(1072, 553));

        jPanel1.setLayout(new java.awt.CardLayout());

        QuanLyHopDong.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(19, 90, 118));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Quản lý hợp đồng KTX");
        jLabel2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(19, 90, 118)));

        ScrollPaneSV1.setBackground(new java.awt.Color(255, 255, 255));
        ScrollPaneSV1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ScrollPaneSV1MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ScrollPaneSV1MouseExited(evt);
            }
        });

        tablehd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tablehd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sinh viên", "Tên sinh viên", "Mã phòng", "Giới tính", "Ngày HDBD", "Ngày HDKT", "Tình trạng"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tablehd.setFocusable(false);
        tablehd.setGridColor(new java.awt.Color(255, 255, 255));
        tablehd.setRowHeight(25);
        tablehd.setSelectionBackground(new java.awt.Color(19, 90, 118));
        tablehd.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tablehd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablehdMouseClicked(evt);
            }
        });
        ScrollPaneSV1.setViewportView(tablehd);

        btupdatehd1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btupdatehd1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pencil_table.png"))); // NOI18N
        btupdatehd1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btupdatehd1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btupdatehd1MouseClicked(evt);
            }
        });

        deleteSV1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        deleteSV1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/delete_table.png"))); // NOI18N
        deleteSV1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteSV1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteSV1MouseClicked(evt);
            }
        });

        txtSearch.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(19, 90, 118)));
        txtSearch.setForeground(new java.awt.Color(19, 90, 118));
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        cbblisthd.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "Còn hạn", "Hết hạn" }));
        cbblisthd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbblisthdMouseClicked(evt);
            }
        });
        cbblisthd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbblisthdActionPerformed(evt);
            }
        });

        txtaddHopDong.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtaddHopDong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/add_table.png"))); // NOI18N
        txtaddHopDong.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtaddHopDong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtaddHopDongMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout QuanLyHopDongLayout = new javax.swing.GroupLayout(QuanLyHopDong);
        QuanLyHopDong.setLayout(QuanLyHopDongLayout);
        QuanLyHopDongLayout.setHorizontalGroup(
            QuanLyHopDongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(QuanLyHopDongLayout.createSequentialGroup()
                .addContainerGap(66, Short.MAX_VALUE)
                .addComponent(btupdatehd1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(deleteSV1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtaddHopDong, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 264, Short.MAX_VALUE)
                .addComponent(cbblisthd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(66, Short.MAX_VALUE))
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(QuanLyHopDongLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(ScrollPaneSV1, javax.swing.GroupLayout.PREFERRED_SIZE, 975, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        QuanLyHopDongLayout.setVerticalGroup(
            QuanLyHopDongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(QuanLyHopDongLayout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(QuanLyHopDongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, QuanLyHopDongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btupdatehd1, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                        .addComponent(deleteSV1, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                        .addComponent(cbblisthd))
                    .addComponent(txtaddHopDong, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(ScrollPaneSV1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(153, 153, 153))
        );

        jPanel1.add(QuanLyHopDong, "card2");

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel49.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(19, 90, 118));
        jLabel49.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel49.setText("Hệ thống quản lý ký túc xá sinh viên");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(237, 50, 55));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Thêm Hợp đồng");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(19, 90, 118));
        jLabel18.setText("Tên Sinh Viên :");

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(19, 90, 118));
        jLabel19.setText("Mã số sinh viên :");

        txtaddTenSV.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtaddTenSV.setForeground(new java.awt.Color(19, 90, 118));
        txtaddTenSV.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(19, 90, 118)));
        txtaddTenSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtaddTenSVActionPerformed1(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(19, 90, 118));
        jLabel20.setText("Thời gian BDHD :");

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(19, 90, 118));
        jLabel21.setText("Thời gian HDKT :");

        btnAddSV.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAddSV.setForeground(new java.awt.Color(237, 50, 55));
        btnAddSV.setText("Lưu sinh viên");
        btnAddSV.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(237, 50, 55)));
        btnAddSV.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddSV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddSVMouseClicked(evt);
            }
        });

        txtaddngayHDKT.setDateFormatString("MM-yyyy");

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/back_main.png"))); // NOI18N
        jLabel10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(19, 90, 118));
        jLabel22.setText("Mã Phòng :");

        txtaddngayHDBD.setDateFormatString("MM-yyyy");

        cbbMaSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbMaSVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel49, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(124, 346, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(jLabel22)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtaddngayHDKT, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAddSV, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbbaddmaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtaddngayHDBD, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbbMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtaddTenSV, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(338, 338, 338))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(jLabel49, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtaddTenSV, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbbaddmaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtaddngayHDBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtaddngayHDKT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(btnAddSV, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(271, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout AddHopDongLayout = new javax.swing.GroupLayout(AddHopDong);
        AddHopDong.setLayout(AddHopDongLayout);
        AddHopDongLayout.setHorizontalGroup(
            AddHopDongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        AddHopDongLayout.setVerticalGroup(
            AddHopDongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.add(AddHopDong, "card4");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel48.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(19, 90, 118));
        jLabel48.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel48.setText("Hệ thống quản lý ký túc xá sinh viên");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(237, 50, 55));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Cập nhật thông tin sinh viên");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(19, 90, 118));
        jLabel13.setText("Tên Sinh Viên :");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(19, 90, 118));
        jLabel14.setText("Mã số sinh viên :");

        txtUpTenSV.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtUpTenSV.setForeground(new java.awt.Color(19, 90, 118));
        txtUpTenSV.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(19, 90, 118)));
        txtUpTenSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUpTenSVActionPerformed1(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(19, 90, 118));
        jLabel15.setText("Thời gian BDHD :");

        txtUpMaSoSV.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtUpMaSoSV.setForeground(new java.awt.Color(19, 90, 118));
        txtUpMaSoSV.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(19, 90, 118)));
        txtUpMaSoSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUpMaSoSVActionPerformed1(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(19, 90, 118));
        jLabel16.setText("Thời gian HDKT :");

        btnUpdateSV.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdateSV.setForeground(new java.awt.Color(237, 50, 55));
        btnUpdateSV.setText("Lưu sinh viên");
        btnUpdateSV.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(237, 50, 55)));
        btnUpdateSV.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdateSV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdateSVMouseClicked(evt);
            }
        });

        txtngayHDKT.setDateFormatString("MM-yyyy");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/back_main.png"))); // NOI18N
        jLabel9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(19, 90, 118));
        jLabel17.setText("Mã Phòng :");

        cbbmaPhong.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtngayHDBD.setDateFormatString("MM-yyyy");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel48, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(346, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel14)
                                .addComponent(jLabel13)
                                .addComponent(jLabel17))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGap(60, 60, 60)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtUpTenSV, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtUpMaSoSV, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGap(59, 59, 59)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtngayHDBD, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cbbmaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnUpdateSV, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtngayHDKT, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(96, 96, 96))))
                .addGap(275, 275, 275))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(jLabel48, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtUpTenSV, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtUpMaSoSV, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(cbbmaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtngayHDBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtngayHDKT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addComponent(btnUpdateSV, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout UpdateHopDongLayout = new javax.swing.GroupLayout(UpdateHopDong);
        UpdateHopDong.setLayout(UpdateHopDongLayout);
        UpdateHopDongLayout.setHorizontalGroup(
            UpdateHopDongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        UpdateHopDongLayout.setVerticalGroup(
            UpdateHopDongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UpdateHopDongLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(UpdateHopDong, "card3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void deleteSV1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteSV1MouseClicked
        // TODO add your handling code here:

        if (count == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn sinh viên để xóa!");
        } else if (count < listhd.size()) {
            int test = JOptionPane.showConfirmDialog(this, "Bạn chắc có muốn xóa sinh viên hay không !", "Thông báo", JOptionPane.YES_NO_OPTION);
            if (test == JOptionPane.YES_OPTION) {
                ThongTinHopDong hd = listhd.get(count);
                new PhongDAO().updateNgayHDKT(hd.getMasv());

            } else if (test == JOptionPane.NO_OPTION) {
                JOptionPane.showMessageDialog(null, "Bạn đã hủy xóa sinh viên thành công");
            }
        }

        showTable();

    }//GEN-LAST:event_deleteSV1MouseClicked

    private void tablehdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablehdMouseClicked
        // TODO add your handling code here:
        count = tablehd.getSelectedRow();
//        int sizep1=listhd.size();
//        count1=count-sizep1;
//        System.out.println("count ="+count);
        //   System.out.println("count ="+count1);
    }//GEN-LAST:event_tablehdMouseClicked

    private void ScrollPaneSV1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ScrollPaneSV1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ScrollPaneSV1MouseClicked

    private void ScrollPaneSV1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ScrollPaneSV1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_ScrollPaneSV1MouseExited

    private void btupdatehd1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btupdatehd1MouseClicked
        // TODO add your handling code here:

        if (count == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn hợp đồng cần update!");
        } else {
            UpdateHopDong.setVisible(true);
            QuanLyHopDong.setVisible(false);
            AddHopDong.setVisible(false);

            upThongtinhopdong();

        }


    }//GEN-LAST:event_btupdatehd1MouseClicked

    private void txtUpTenSVActionPerformed1(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUpTenSVActionPerformed1
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUpTenSVActionPerformed1

    private void txtUpMaSoSVActionPerformed1(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUpMaSoSVActionPerformed1
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUpMaSoSVActionPerformed1

    private void btnUpdateSVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateSVMouseClicked
        // TODO add your handling code here:
        if (rangbuocNgayRaVao() == 1) {
            HopDongKTXDAO hd = new HopDongKTXDAO();
            hd.updateHopDongKTX(txtUpMaSoSV.getText(), (String) cbbmaPhong.getSelectedItem(), txtngayHDKT.getDate(),txtngayHDBD.getDate());
            showTable();
            UpdateHopDong.setVisible(false);
            QuanLyHopDong.setVisible(true);
            JOptionPane.showMessageDialog(null, "Update thành công!");
        } else {
            JOptionPane.showMessageDialog(null, "Ngày ra phải lớn hơn ngày vào!");
        }
        showTable();


    }//GEN-LAST:event_btnUpdateSVMouseClicked

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        // TODO add your handling code here:
        UpdateHopDong.setVisible(false);
        QuanLyHopDong.setVisible(true);

    }//GEN-LAST:event_jLabel9MouseClicked

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        // System.out.println("option"+txtSearch.getSelectedOption());

        // System.out.println("list chon"+cbblisthd.getSelectedIndex());
        Model.setRowCount(0);
        if (txtSearch.isSelected()) {
            int option = txtSearch.getSelectedIndex();
            String textsearch = txtSearch.getText().trim();
            // System.out.println("textsearch :"+textsearch);
            if (countcbblisthd == 0) {
                if (option == 0) {

                    showTablemasv("maSV", textsearch, 0);

                } else if (option == 1) {
                    // showTable("tenSV", textsearch);
                    showTabletensv("tenSV", textsearch, 0);

                }

            } else if (countcbblisthd == 1) {

                if (option == 0) {

                    showTablemasv("maSV", textsearch, 1);

                } else if (option == 1) {
                    // showTable("tenSV", textsearch);
                    showTabletensv("tenSV", textsearch, 1);
                }

            } else if (countcbblisthd == 2) {
                if (option == 0) {
                    showTablemasv("maSV", textsearch, 2);
                } else if (option == 1) {
                    // showTable("tenSV", textsearch);
                    showTabletensv("tenSV", textsearch, 2);
                }

            }

        }
    }//GEN-LAST:event_txtSearchKeyReleased

    private void cbblisthdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbblisthdMouseClicked
        //  TODO add your handling code here:


    }//GEN-LAST:event_cbblisthdMouseClicked

    private void cbblisthdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbblisthdActionPerformed
        // TODO add your handling code here:
        countcbblisthd = cbblisthd.getSelectedIndex();
        //  System.out.println("select ="+countcbblisthd);
        if (countcbblisthd == 0) {
            showTable();

        } else if (countcbblisthd == 1) {
            showTable1();
        } else if (countcbblisthd == 2) {
            showTable2();
        }

        txtSearch.setText("");

    }//GEN-LAST:event_cbblisthdActionPerformed

    private void txtaddHopDongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtaddHopDongMouseClicked
        // TODO add your handling code here:

        UpdateHopDong.setVisible(false);
        QuanLyHopDong.setVisible(false);
        AddHopDong.setVisible(true);
        // listsinhvienchuaAdd=new SinhVienDAO().getAllThongTinSVchuadangky(0, 1);

        AddComboBoxMasv();

//        for(ThongTinSinhVien i : listsinhvienchuaAdd)
//        {
//        
//        }

    }//GEN-LAST:event_txtaddHopDongMouseClicked

    private void txtaddTenSVActionPerformed1(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtaddTenSVActionPerformed1
        // TODO add your handling code here:
    }//GEN-LAST:event_txtaddTenSVActionPerformed1

    private void btnAddSVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddSVMouseClicked
        // TODO add your handling code here:
        if (rangbuocNgayRaVao1() == 1) {
            AddHopDong();
            UpdateHopDong.setVisible(false);
            QuanLyHopDong.setVisible(true);
            AddHopDong.setVisible(false);
            new SinhVienDAO().updateDKthanhcong((String) cbbMaSV.getSelectedItem());
            new HopDongKTXDAO().deleteDangkyPhong((String) cbbMaSV.getSelectedItem());
        }
        showTable();


    }//GEN-LAST:event_btnAddSVMouseClicked

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        // TODO add your handling code here:
        UpdateHopDong.setVisible(false);
        QuanLyHopDong.setVisible(true);
        AddHopDong.setVisible(false);
    }//GEN-LAST:event_jLabel10MouseClicked

    private void cbbMaSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbMaSVActionPerformed
        // TODO add your handling code here:
        maSVChuaCoHD = (String) cbbMaSV.getSelectedItem();
        int trangthai = new SinhVienDAO().layTrangThaiSinhVien(maSVChuaCoHD);

        if (trangthai == 1) {
            layThongTinHopDongChoduyet(maSVChuaCoHD);
        } else {

            layThongTinHopDongChuaDangKy(maSVChuaCoHD);
        }
    }//GEN-LAST:event_cbbMaSVActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddHopDong;
    private javax.swing.JPanel QuanLyHopDong;
    private javax.swing.JScrollPane ScrollPaneSV1;
    private javax.swing.JPanel UpdateHopDong;
    private javax.swing.JButton btnAddSV;
    private javax.swing.JButton btnUpdateSV;
    private javax.swing.JLabel btupdatehd1;
    private javax.swing.JComboBox<String> cbbMaSV;
    private javax.swing.JComboBox<String> cbbaddmaPhong;
    private javax.swing.JComboBox<String> cbblisthd;
    private javax.swing.JComboBox<String> cbbmaPhong;
    private javax.swing.JLabel deleteSV1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTable tablehd;
    private textfield.TextFieldSearchOption txtSearch;
    private javax.swing.JTextField txtUpMaSoSV;
    private javax.swing.JTextField txtUpTenSV;
    private javax.swing.JLabel txtaddHopDong;
    private javax.swing.JTextField txtaddTenSV;
    private com.toedter.calendar.JDateChooser txtaddngayHDBD;
    private com.toedter.calendar.JDateChooser txtaddngayHDKT;
    private com.toedter.calendar.JDateChooser txtngayHDBD;
    private com.toedter.calendar.JDateChooser txtngayHDKT;
    // End of variables declaration//GEN-END:variables

    public void showTable() {
        listhd = new dao.HopDongKTXDAO().getallHopDong();
        Model.setRowCount(0);
        String trangthai = null;
        String tinhtrang = "";
        Date date = new Date();
        for (ThongTinHopDong hd : listhd) {

            if (date.compareTo(hd.getNgayHDKT()) < 0) {
                tinhtrang = "Còn hạn";
            } else {
                tinhtrang = "Hết hạn";
            }
            String gioitinh = new SinhVienDAO().layGioiTinhSVtuMaSV(hd.getMasv());
            String tensv = new SinhVienDAO().laytenSVtuMaSV(hd.getMasv());
            Model.addRow(new Object[]{
                hd.getMasv(), tensv, hd.getMaphong(), gioitinh, hd.getNgayHDBD(), hd.getNgayHDKT(), tinhtrang
            });
        }
        count = -1;
    }

    private void showTable1() {
        listhd = new dao.HopDongKTXDAO().getallHopDong1();
        Model.setRowCount(0);
        String trangthai = null;
        Date date = new Date();
        String tinhtrang = "";
        for (ThongTinHopDong hd : listhd) {

            if (date.compareTo(hd.getNgayHDKT()) < 0) {
                tinhtrang = "Còn hạn";
            } else {
                tinhtrang = "Hết hạn";
            }
            String gioitinh = new SinhVienDAO().layGioiTinhSVtuMaSV(hd.getMasv());
            String tensv = new SinhVienDAO().laytenSVtuMaSV(hd.getMasv());
            Model.addRow(new Object[]{
                hd.getMasv(), tensv, hd.getMaphong(), gioitinh, hd.getNgayHDBD(), hd.getNgayHDKT(), tinhtrang
            });
        }
        count = -1;
    }

    private void showTable2() {
        listhd = new dao.HopDongKTXDAO().getallHopDong2();
        Model.setRowCount(0);
        String trangthai = null;
        Date date = new Date();
        String tinhtrang = "";
        for (ThongTinHopDong hd : listhd) {

            if (date.compareTo(hd.getNgayHDKT()) < 0) {
                tinhtrang = "Còn hạn";
            } else {
                tinhtrang = "Hết hạn";
            }
            String gioitinh = new SinhVienDAO().layGioiTinhSVtuMaSV(hd.getMasv());
            String tensv = new SinhVienDAO().laytenSVtuMaSV(hd.getMasv());
            Model.addRow(new Object[]{
                hd.getMasv(), tensv, hd.getMaphong(), gioitinh, hd.getNgayHDBD(), hd.getNgayHDKT(), tinhtrang
            });
        }
        count = -1;
    }

    private void showTable3() {
        listhd = new dao.HopDongKTXDAO().getallHopDong3();
        Model.setRowCount(0);
        String trangthai = null;
        String tinhtrang = "";
        Date date = new Date();
        for (ThongTinHopDong hd : listhd) {
            if (date.compareTo(hd.getNgayHDKT()) < 0) {
                tinhtrang = "Còn hạn";
            } else {
                tinhtrang = "Hết hạn";
            }
            String gioitinh = new SinhVienDAO().layGioiTinhSVtuMaSV(hd.getMasv());
            String tensv = new SinhVienDAO().laytenSVtuMaSV(hd.getMasv());
            Model.addRow(new Object[]{
                hd.getMasv(), tensv, hd.getMaphong(), gioitinh, hd.getNgayHDBD(), hd.getNgayHDKT(), tinhtrang
            });
        }
        count = -1;
    }

    private void showTablemasv(String where, String text, int k) {
        listhd = new dao.HopDongKTXDAO().getallHopDongmasv(where, text, k);
        Model.setRowCount(0);
        String trangthai = null;
        String tinhtrang = "";
        Date date = new Date();
        for (ThongTinHopDong hd : listhd) {
            if (date.compareTo(hd.getNgayHDKT()) < 0) {
                tinhtrang = "Còn hạn";
            } else {
                tinhtrang = "Hết hạn";
            }
            String gioitinh = new SinhVienDAO().layGioiTinhSVtuMaSV(hd.getMasv());
            String tensv = new SinhVienDAO().laytenSVtuMaSV(hd.getMasv());
            Model.addRow(new Object[]{
                hd.getMasv(), tensv, hd.getMaphong(), gioitinh, hd.getNgayHDBD(), hd.getNgayHDKT(), tinhtrang
            });
        }
        count = -1;
    }

    private void showTabletensv(String where, String text, int k) {
        listhd = new dao.HopDongKTXDAO().getallHopDongtensv(where, text, k);
        Model.setRowCount(0);
        String trangthai = null;
        String tinhtrang = "";
        Date date = new Date();
        for (ThongTinHopDong hd : listhd) {
            if (date.compareTo(hd.getNgayHDKT()) < 0) {
                tinhtrang = "Còn hạn";
            } else {
                tinhtrang = "Hết hạn";
            }
            String gioitinh = new SinhVienDAO().layGioiTinhSVtuMaSV(hd.getMasv());
            String tensv = new SinhVienDAO().laytenSVtuMaSV(hd.getMasv());
            Model.addRow(new Object[]{
                hd.getMasv(), tensv, hd.getMaphong(), gioitinh, hd.getNgayHDBD(), hd.getNgayHDKT(), tinhtrang
            });
        }
        count = -1;
    }
    //bo sung---------------------------

    public void upThongtinhopdong() {
        ThongTinHopDong hd = listhd.get(count);
        String masv = hd.getMasv();
        SinhVienDAO svd = new SinhVienDAO();
        String gioitinh = svd.layGioiTinhSVtuMaSV(masv);
        String tensv = svd.laytenSVtuMaSV(masv);

        txtUpTenSV.setText(tensv);
        txtUpMaSoSV.setText(masv);
        txtngayHDBD.setDate(hd.getNgayHDBD());
        txtngayHDKT.setDate(hd.getNgayHDKT());
        AddComboBoxnew(gioitinh);
        txtUpTenSV.setEditable(false);
        txtUpMaSoSV.setEditable(false);
        cbbmaPhong.setSelectedItem(hd.getMaphong());

    }

    void AddComboBoxnew(String gioitinh) {

        PhongDAO pd = new PhongDAO();
        //  System.out.println("checkPhong :"+pd.CheckPhong(gioitinh));
        if (pd.CheckPhong(gioitinh) == 1) {
            cbbmaPhong.removeAllItems();

            List<ThongTinPhong> listphong = new PhongDAO().getAllThongTinPhongGioiTinh(gioitinh);

            for (ThongTinPhong phong : listphong) {
                cbbmaPhong.addItem(phong.getMaPhong());

            }

        }

    }

    void AddComboBoxnew2(String gioitinh) {

        PhongDAO pd = new PhongDAO();
        if (pd.CheckPhong(gioitinh) == 1) {
            cbbaddmaPhong.removeAllItems();

            List<ThongTinPhong> listphong = new PhongDAO().getAllThongTinPhongGioiTinh(gioitinh);

            for (ThongTinPhong phong : listphong) {
                cbbaddmaPhong.addItem(phong.getMaPhong());

            }

        }

    }

    public int rangbuocNgayRaVao() {
        int k = 0;
        try {
            SimpleDateFormat sp = new SimpleDateFormat("MM-yyyy");
            String d1 = sp.format(txtngayHDBD.getDate());
            String d2 = sp.format(txtngayHDKT.getDate());
            Date d1n = sp.parse(d1);
            Date d2n = sp.parse(d2);
            if (d1n.compareTo(d2n) < 0) {
                k = 1;

            }

        } catch (ParseException ex) {
            Logger.getLogger(DangKyPhong.class.getName()).log(Level.SEVERE, null, ex);
        }
        return k;
    }

    public int rangbuocNgayRaVao1() {
        int k = 0;
        try {
            SimpleDateFormat sp = new SimpleDateFormat("MM-yyyy");
            if (txtaddngayHDBD.getDate() != null && txtaddngayHDKT.getDate() != null) {
                String d1 = sp.format(txtaddngayHDBD.getDate());
                String d2 = sp.format(txtaddngayHDKT.getDate());
                Date d1n = sp.parse(d1);
                Date d2n = sp.parse(d2);
                if (d1n.compareTo(d2n) < 0) {
                    k = 1;

                } else {
                    JOptionPane.showMessageDialog(null, "Ngày hợp đồng bắt đầu phải trước ngày ra !");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Ngày không được trống !");
            }

        } catch (ParseException ex) {
            Logger.getLogger(DangKyPhong.class.getName()).log(Level.SEVERE, null, ex);
        }
        return k;
    }

    void AddSearch() {
        txtSearch.addEventOptionSelected(new SearchOptinEvent() {
            @Override
            public void optionSelected(SearchOption option, int index) {
                txtSearch.setHint("Tìm kiếm " + option.getName() + "....");
            }
        });
        txtSearch.addOption(new SearchOption("mã SV", new ImageIcon(getClass().getResource("/img/user.png"))));
        txtSearch.addOption(new SearchOption("tên SV", new ImageIcon(getClass().getResource("/img/user.png"))));
    }

    // bo sung===
    void AddComboBoxMasv() {

        PhongDAO pd = new PhongDAO();
        cbbMaSV.removeAllItems();

        List<String> listmasv = new HopDongKTXDAO().LayMaSinhVienChuaCoHopDong();

        for (String i : listmasv) {
            cbbMaSV.addItem(i);

        }

    }

    public void layThongTinHopDongChuaDangKy(String masv) {

        ThongTinSinhVien sv = new HopDongKTXDAO().getAllThongTinSVchuadangky(masv);
        HopDongKTXDAO hd = new HopDongKTXDAO();
        String gioitinh = sv.getGioiTinh();
        AddComboBoxnew2(gioitinh);
        String tensv = sv.getTenSV();
        Date ngayBD = hd.layNgayHDBDtuDangKYPhong(masv);
        Date ngayKT = hd.layNgayHDKTtuDangKYPhong(masv);
        txtaddTenSV.setText(tensv);
        txtaddngayHDBD.setDate(ngayBD);
        txtaddngayHDKT.setDate(ngayKT);
        txtaddTenSV.setEditable(false);
    }

    void AddHopDong() {
        Connection conn = KetNoiSQL.getConnection();
        int row = 0;
        String sql1 = "insert into HopDongKTX (maSV, maPhong,ngayHDBD,ngayHDKT) values(?,?,?,?)";
        try {
            PreparedStatement ps1 = conn.prepareStatement(sql1);

            ps1.setString(1, (String) cbbMaSV.getSelectedItem());
            ps1.setString(2, (String) cbbaddmaPhong.getSelectedItem());
            ps1.setDate(3, new java.sql.Date(txtaddngayHDBD.getDate().getTime()));
            ps1.setDate(4, new java.sql.Date(txtaddngayHDKT.getDate().getTime()));

            row = ps1.executeUpdate();
            if (row > 0) {
                JOptionPane.showMessageDialog(null, "Thêm Hợp đồng thành công");
            } else {
            }
            conn.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

    }

    public void layThongTinHopDongChoduyet(String masv) {

        ThongTinSinhVien sv = new HopDongKTXDAO().getAllThongTinSVchuadangky(masv);
        HopDongKTXDAO hd = new HopDongKTXDAO();
        String gioitinh = sv.getGioiTinh();
        String loaiphong = new SinhVienDAO().layLoaiPhong(masv);

        //System.out.println("gioi tinh + loai phong ="+gioitinh+loaiphong);
        AddComboBoxnew3(gioitinh, loaiphong);
        String tensv = sv.getTenSV();
        Date ngayBD = hd.layNgayHDBDtuDangKYPhong(masv);
        Date ngayKT = hd.layNgayHDKTtuDangKYPhong(masv);
        txtaddTenSV.setText(tensv);
        txtaddngayHDBD.setDate(ngayBD);
        txtaddngayHDKT.setDate(ngayKT);
        txtaddTenSV.setEditable(false);
    }

    void AddComboBoxnew3(String gioitinh, String loaiphong) {

        PhongDAO pd = new PhongDAO();

        cbbaddmaPhong.removeAllItems();

        List<ThongTinPhong> listphong = new PhongDAO().getAllThongTinPhongGioiTinhLoaiPhong(gioitinh, loaiphong);

        for (ThongTinPhong phong : listphong) {
            cbbaddmaPhong.addItem(phong.getMaPhong());

        }

    }

}
