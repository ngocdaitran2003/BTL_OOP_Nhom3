/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package JFrameQuanLyKyTucXa;

/**
 *
 * @author PhanTien
 */
import Connector.KetNoiSQL;
import dao.HoaDonPhongDAO;
import dao.HopDongKTXDAO;
import dao.PhongDAO;
import dao.SinhVienDAO;
import dao.ThongTinDichVuDAO;
import dao.ThongTinHoaDonDAO;
import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.HoaDonPhong;
import model.ThongTinHoaDonSV;
import model.ThongTinSinhVien;

public class KhoanPhi_USER extends javax.swing.JPanel {

    /**
     * Creates new form KhoanPhi_USER
     */
    private DefaultTableModel Model;
    private DefaultTableModel Model1;
    private String email;
    private String maSV;
    private String maPhong;

    public KhoanPhi_USER() {

        initComponents();
        Model = (DefaultTableModel) tablehd.getModel();
        tablehd.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 12));
        tablehd.getTableHeader().setOpaque(false);
        tablehd.getTableHeader().setBackground(new Color(19, 90, 118));
        tablehd.getTableHeader().setForeground(new Color(225, 225, 225));
        
        Model1 = (DefaultTableModel) tablehd1.getModel();
        tablehd1.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 12));
        tablehd1.getTableHeader().setOpaque(false);
        tablehd1.getTableHeader().setBackground(new Color(19, 90, 118));
        tablehd1.getTableHeader().setForeground(new Color(225, 225, 225));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablehd = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablehd1 = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(1072, 553));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setBackground(new java.awt.Color(19, 90, 112));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(19, 90, 118));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText(" TRANG THÔNG TIN SINH VIÊN Ở KÝ TÚC XÁ CỦA HỌC VIỆN ");

        jLabel40.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(237, 50, 55));
        jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel40.setText("Thanh toán tiền khoản phí dịch vụ");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(237, 50, 55));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/thongbao.png"))); // NOI18N
        jLabel1.setText("Thông báo thanh toán");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 158, 27));
        jLabel3.setText("Thông tin chi tiết về các chi phí mà bạn cần thanh toán:");

        tablehd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tablehd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "THÁNG GHI", "MÃ SINH VIÊN", "TIỀN THANH TOÁN", "TRẠNG THÁI"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablehd.setGridColor(new java.awt.Color(19, 90, 118));
        tablehd.setRowHeight(25);
        tablehd.setSelectionBackground(new java.awt.Color(19, 90, 118));
        tablehd.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tablehd.setShowGrid(true);
        tablehd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablehdMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablehd);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(19, 90, 118));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/coin.png"))); // NOI18N
        jLabel4.setText("Tiền phòng");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(19, 90, 118));
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/coin.png"))); // NOI18N
        jLabel5.setText("Tiền dịch vụ");

        tablehd1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tablehd1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "THÁNG GHI", "MÃ PHÒNG", "SỐ NƯỚC TIÊU THỤ", "SỐ ĐIỆN TIÊU THỤ", "TỔNG TIỀN", "TRẠNG THÁI"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablehd1.setGridColor(new java.awt.Color(19, 90, 118));
        tablehd1.setRowHeight(25);
        tablehd1.setSelectionBackground(new java.awt.Color(19, 90, 118));
        tablehd1.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tablehd1.setShowGrid(true);
        tablehd1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablehd1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablehd1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1062, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
            .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 769, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 747, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tablehdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablehdMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tablehdMouseClicked

    private void tablehd1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablehd1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tablehd1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablehd;
    private javax.swing.JTable tablehd1;
    // End of variables declaration//GEN-END:variables

    private void showTable() {
        List<ThongTinHoaDonSV> listhdsv = new ThongTinHoaDonDAO().getAllThongTinHoaDonSVTheoMaSV(maSV);
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat formatter1 = new SimpleDateFormat("MM/yyyy");
        Model.setRowCount(0);
        for (ThongTinHoaDonSV hd : listhdsv) {
            Date date = null;
            try {
                date = formatter.parse(String.valueOf(hd.getNgayThang()));
            } catch (ParseException e) {
                e.printStackTrace();
            }
            String trangthai;
            String ngayThang = formatter1.format(date);
            if (hd.getTrangThai() == 1) {
                trangthai = "Đã thanh toán";
            } else {
                trangthai = "Chưa thanh toán";
            }

            Model.addRow(new Object[]{
                ngayThang, hd.getMaSV(), hd.getTienThanhToan(), trangthai
            });

        }
    }
    void showTable1() {
        String ngayhdbd ="01/"+ new HopDongKTXDAO().LayNgayBDTuMaSV(maSV);
        String ngayhdkt ="01/"+ new HopDongKTXDAO().LayNgayKTTuMaSV(maSV);
        
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        Date datengayhdbd = null;
        Date datengayhdkt = null;
        try {
            datengayhdbd= sdf.parse(ngayhdbd);
            datengayhdkt=sdf.parse(ngayhdkt);
        } catch (Exception e) {
        }
        
        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
        String ngaybd = sdf1.format(datengayhdbd);
        String ngaykt = sdf1.format(datengayhdkt);
        
        
        
        
        List<HoaDonPhong> list = new HoaDonPhongDAO().getAllHoaDonPhongTheoMaPhong(maPhong,ngaybd, ngaykt);
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat formatter1 = new SimpleDateFormat("MM/yyyy");
        Model1.setRowCount(0);
        for (HoaDonPhong hd : list) {
            Date date = null;
            try {
                date = formatter.parse(String.valueOf(hd.getNgayThang()));
            } catch (ParseException e) {
                e.printStackTrace();
            }
            String trangthai;
            String ngayThang = formatter1.format(date);
            if (hd.getTrangThai() == 1) {
                trangthai = "Đã thanh toán";
            } else {
                trangthai = "Chưa thanh toán";
            }

            Model1.addRow(new Object[]{
                ngayThang, hd.getMaPhong(), hd.getSoNuocTieuThu(), hd.getSoDienTieuThu(), hd.getTongTien(), trangthai
            });
        }
    }
    
    void setEmail(String email){
        this.email = email;
        ThongTinSinhVien sv = new SinhVienDAO().getAllThongTinSVTheoemail(email);
        this.maSV=sv.getMaSV();
        this.maPhong = new HopDongKTXDAO().laymaPhongtumaSV(sv.getMaSV());
        showTable();
        showTable1();
    }

}
